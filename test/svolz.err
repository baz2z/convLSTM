/mnt/qb/work/butz/svolz67/envs/lib/python3.10/site-packages/torch/nn/modules/loss.py:529: UserWarning: Using a target size (torch.Size([32, 170, 32, 32])) that is different to the input size (torch.Size([32, 270, 32, 32])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
Traceback (most recent call last):
  File "/mnt/qb/work/butz/svolz67/dev/convLSTM/test/./testAdaptedLoop.py", line 264, in <module>
    loss100_270 = calcLoss(model, 100, 20, 270, dataloader2)
  File "/mnt/qb/work/butz/svolz67/dev/convLSTM/test/./testAdaptedLoop.py", line 215, in calcLoss
    loss = criterion(output, labels)
  File "/mnt/qb/work/butz/svolz67/envs/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/mnt/qb/work/butz/svolz67/envs/lib/python3.10/site-packages/torch/nn/modules/loss.py", line 529, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/mnt/qb/work/butz/svolz67/envs/lib/python3.10/site-packages/torch/nn/functional.py", line 3261, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/mnt/qb/work/butz/svolz67/envs/lib/python3.10/site-packages/torch/functional.py", line 75, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (270) must match the size of tensor b (170) at non-singleton dimension 1
